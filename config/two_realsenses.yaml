depth:
  camera_names: ["up_rgbd", "down_rgbd"]

  up_rgbd:

    topic:
      depth_in: "up_rgbd/depth/image_rect_raw"
      depth_camera_info_in: "up_rgbd/depth/camera_info"
      points_out: "up_rgbd/points_processed"
      points_over_max_range_out: "up_rgbd/points_over_max_range" # used if non-empty and range_clip used

    filter:
      downsample:
        step:
          row: 2 # used if >1
          col: 2 # used if >1
      range_clip:
        min: 0.4
        max: 10.0 # used if >0
      voxel_grid:
        resolution: 0.05 # used if >0
      radius_outlier:
        radius: 0.0 # used if both >0
        neighbors: 2
      minimum_grid:
        resolution: 0.05 # used if >0
      bilateral:
        sigma_S: 0.0 # used if both >0
        sigma_R: 0.005

    landing_spot_detection:
      use: false

  down_rgbd:

    topic:
      depth_in: "down_rgbd/depth/image_rect_raw"
      depth_camera_info_in: "down_rgbd/depth/camera_info"
      points_out: "down_rgbd/points_processed"
      points_over_max_range_out: "down_rgbd/points_over_max_range" # used if non-empty and range_clip used
      landing_spot_detection_out: "down_rgbd/landing_spot_detection"
      landing_spot_detection_dbg_out: "down_rgbd/landing_spot_detection_dbg"

    filter:
      downsample:
        step:
          row: 2 # used if >1
          col: 2 # used if >1
      range_clip:
        min: 0.4
        max: 10.0 # used if >0
      voxel_grid:
        resolution: 0.05 # used if >0
      radius_outlier:
        radius: 0.0 # used if both >0
        neighbors: 5
      minimum_grid:
        resolution: 0.05 # used if >0
      bilateral:
        sigma_S: 0.0 # used if both >0
        sigma_R: 0.005

    landing_spot_detection:
      use: true
      frame_step: 15 # run on every n-th data frame
      square:
        size: 1.0           # square-like landing spot size in meters
        min_size_ratio: 0.9 # square is valid if its width and height are greater than (size*min_size_ratio)
        max_ratio: 0.95     # square is valid if the ratio of its points to all points is lower than this threshold (otherwise, we're too close to decide on landability)
      plane_detection:
        normal_z_threshold: 0.7        # threshold of z-axis normal for plane to be classified as a landing spot
        ransac_distance_threshold: 0.1 # lower value will filter out more "noisy" planes
        min_inliers_ratio: 0.8
      world_frame: "subt"
